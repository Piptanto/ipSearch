{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","ipNum","setIp","latlng","setLatlng","useEffect","loadIp","now","DateTime","toLocaleString","DATETIME_MED_WITH_WEEKDAY","zone","zoneName","a","axios","get","response","console","log","data","location","lat","lng","className","id","style","textDecorationLine","fontWeight","ip","city","region","country","src","toLowerCase","srcset","alt","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","Popup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAqEeA,MA3Df,WAAgB,IAAD,cAIb,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAuBF,mBAAS,aAAhC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,CAAC,QAAS,MAA/C,mBAAOK,EAAP,KAAeC,EAAf,KAEAC,qBAAU,kBAAMC,MAAU,IAE1B,IAAMC,EAAMC,WAASD,MAAME,eAAeD,WAASE,2BAC7CC,EAAOH,WAASD,MAAMK,SAEtBN,EAAM,uCAAG,4BAAAO,EAAA,6DACbb,GAAW,GADE,SAEUc,IAAMC,IAbnB,gGAWG,OAEPC,EAFO,OAGbC,QAAQC,IAAIF,GACZd,EAAMc,EAASG,MACff,EAAU,CAACY,EAASG,KAAKC,SAASC,IAAKL,EAASG,KAAKC,SAASE,MAC9DtB,GAAW,GANE,2CAAH,qDAYZ,OAJAiB,QAAQC,IAAIf,GAKV,sBAAKoB,UAAU,MAAf,UACE,wDACCxB,EACD,mBAAGyB,GAAG,UAAN,wBAEA,sBAAKD,UAAU,OAAf,UACA,sBAAKA,UAAU,UAAf,UACE,mBAAIE,MAAO,CAACC,mBAAoB,aAAhC,oBACA,mBAAGD,MAAO,CAACE,WAAY,QAAvB,gBAAiC1B,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAO2B,KACxC,mCAAI3B,QAAJ,IAAIA,GAAJ,UAAIA,EAAOmB,gBAAX,aAAI,EAAiBS,OACrB,qCAAI5B,QAAJ,IAAIA,GAAJ,UAAIA,EAAOmB,gBAAX,aAAI,EAAiBU,OAArB,YAA+B7B,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAOmB,gBAAtC,aAA+B,EAAiBW,WAChD,4BAAIxB,IACJ,2CAAcI,KACd,qBAAKqB,IAAG,2CAA+B/B,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAOmB,gBAAtC,aAA+B,EAAiBW,QAAQE,cAAxD,QAA6EC,OAAM,yCAA6BjC,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOmB,gBAApC,iBAA6B,EAAiBW,eAA9C,aAA6B,EAA0BE,cAAvD,4DACjEhC,QADiE,IACjEA,GADiE,UACjEA,EAAOmB,gBAD0D,aACjE,EAAiBW,QAAQE,cADwC,WAChBV,UAAU,MAAMY,IAAI,YAEjG,eAACC,EAAA,EAAD,CAAcC,OAAQlC,EAAQmC,KAAM,GAAIC,iBAAiB,EAAzD,UACJ,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,SAAUzC,EAAQ0C,KAAM,IAAIC,OAAK,CAACC,QAASC,IAAeC,SAAU,CAAC,GAAI,IAAKC,WAAY,CAAC,GAAI,MAAvG,SACE,eAACC,EAAA,EAAD,2BACe,sCC/CJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5caddbab.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { DateTime } from \"luxon\";\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\nimport {Icon} from 'leaflet'\n\n//How to deploy on GitHub Pages: https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f\n\nfunction App() {\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const url = 'https://geo.ipify.org/api/v2/country,city?apiKey='+API_KEY+'&ipAddress='\n  \n  const [loading, setLoading] = useState(false);\n  const [ipNum, setIp] = useState('not found');\n  const [latlng, setLatlng] = useState([51.505, -0.09]);\n\n  useEffect(() => loadIp(), []);\n\n  const now = DateTime.now().toLocaleString(DateTime.DATETIME_MED_WITH_WEEKDAY);\n  const zone = DateTime.now().zoneName;\n\n  const loadIp = async () => {\n    setLoading(true);\n    const response = await axios.get(url);\n    console.log(response);\n    setIp(response.data);\n    setLatlng([response.data.location.lat, response.data.location.lng]);\n    setLoading(false);\n  }\n  console.log(latlng);\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>What is my IP-address?</h1>\n      {loading ?\n      <p id=\"loading\">Loading...</p>\n      :\n      <div className=\"body\">\n      <div className=\"ipField\">\n        <p  style={{textDecorationLine: 'underline'}}>My IP:</p>\n        <p style={{fontWeight: 'bold'}}>{ipNum?.ip}</p>\n        <p>{ipNum?.location?.city}</p>\n        <p>{ipNum?.location?.region}, {ipNum?.location?.country}</p>\n        <p>{now}</p>\n        <p>Timezone: {zone}</p>\n        <img src={`https://flagcdn.com/80x60/${ipNum?.location?.country.toLowerCase()}.png`} srcset={`https://flagcdn.com/h40/${ipNum?.location?.country?.toLowerCase()}.png 2x,\n        https://flagcdn.com/h60/${ipNum?.location?.country.toLowerCase()}.png 3x`} className='map' alt=\"flag\" />\n      </div>\n      <MapContainer center={latlng} zoom={15} scrollWheelZoom={false}>\n  <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  <Marker position={latlng} icon={new Icon({iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41]})}>\n    <Popup>\n      You are here <br />\n    </Popup>\n  </Marker>\n</MapContainer>\n</div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}